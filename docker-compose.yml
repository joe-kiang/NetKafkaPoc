version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "poc-topic:1:1"
    depends_on:
      - zookeeper
  
  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka-cluster:
              properties:
                bootstrap.servers: "kafka:9092"
    ports:
      - "8085:8080"
    depends_on:
      - kafka
  
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"
      - "4318:4318"
    environment:
      - TZ=America/Fortaleza

  jaeger:
    environment:
      - TZ=America/Fortaleza
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - 16686:16686
      - 16685:16685
      - 14268:14268
      - 14250:14250
      - 14317:4317
      - 9411:9411

  kafkapoc-api:
    build:
      context: ./PocApi
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: poc-topic
    ports:
      - "8080:8080"

  kafkapoc-consumer:
    build:
      context: ./PocConsumer
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: poc-topic
    depends_on:
      - kafka
    ports:
      - "8081:8080"
